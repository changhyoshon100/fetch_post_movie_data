{"ast":null,"code":"var _jsxFileName = \"/Users/changhyoshon/Udemy/React/section15_practice/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  // function fetchMoviesHandler() {\n  // \tfetch(\"https://swapi.dev/api/films/\")\n  // \t\t.then((response) => {\n  // \t\t\treturn response.json();\n  // \t\t})\n  // \t\t.then((data) => {\n  // \t\t\tconst transformedMovies = data.results.map((movieData) => {\n  // \t\t\t\treturn {\n  // \t\t\t\t\tid: movieData.episode_id,\n  // \t\t\t\t\ttitle: movieData.title,\n  // \t\t\t\t\topeningText: movieData.opening_crawl,\n  // \t\t\t\t\treleaseDate: movieData.release_date,\n  // \t\t\t\t};\n  // \t\t\t});\n  // \t\t\tsetMovies(transformedMovies);\n  // \t\t});\n  // }\n\n  async function fetchMoviesHandler() {\n    const response = await fetch(\"https://swapi.dev/api/films/\");\n    const data = await response.json();\n    console.log(!isLoading);\n    setIsLoading(true);\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }, this), !isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 43\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"...is loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"K6Fmynn3O5MwYfimS2e7LgCybds=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","fetchMoviesHandler","response","fetch","data","json","console","log","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/changhyoshon/Udemy/React/section15_practice/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst [movies, setMovies] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\t// function fetchMoviesHandler() {\n\t// \tfetch(\"https://swapi.dev/api/films/\")\n\t// \t\t.then((response) => {\n\t// \t\t\treturn response.json();\n\t// \t\t})\n\t// \t\t.then((data) => {\n\t// \t\t\tconst transformedMovies = data.results.map((movieData) => {\n\t// \t\t\t\treturn {\n\t// \t\t\t\t\tid: movieData.episode_id,\n\t// \t\t\t\t\ttitle: movieData.title,\n\t// \t\t\t\t\topeningText: movieData.opening_crawl,\n\t// \t\t\t\t\treleaseDate: movieData.release_date,\n\t// \t\t\t\t};\n\t// \t\t\t});\n\t// \t\t\tsetMovies(transformedMovies);\n\t// \t\t});\n\t// }\n\n\tasync function fetchMoviesHandler() {\n\t\tconst response = await fetch(\"https://swapi.dev/api/films/\");\n\t\tconst data = await response.json();\n\t\tconsole.log(!isLoading);\n\t\tsetIsLoading(true);\n\t\tconst transformedMovies = data.results.map((movieData) => {\n\t\t\treturn {\n\t\t\t\tid: movieData.episode_id,\n\t\t\t\ttitle: movieData.title,\n\t\t\t\topeningText: movieData.opening_crawl,\n\t\t\t\treleaseDate: movieData.release_date,\n\t\t\t};\n\t\t});\n\t\tsetMovies(transformedMovies);\n\t\tsetIsLoading(false);\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<section>\n\t\t\t\t<button onClick={fetchMoviesHandler}>Fetch Movies</button>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t{!isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n\t\t\t\t{!isLoading && movies.length === 0 && <p>No found</p>}\n\t\t\t\t{isLoading && <p>...is loading</p>}\n\t\t\t</section>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,eAAeU,kBAAkBA,CAAA,EAAG;IACnC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC5D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,CAACR,SAAS,CAAC;IACvBC,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMQ,iBAAiB,GAAGJ,IAAI,CAACK,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;MACzD,OAAO;QACNC,EAAE,EAAED,SAAS,CAACE,UAAU;QACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;QACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;QACpCC,WAAW,EAAEN,SAAS,CAACO;MACxB,CAAC;IACF,CAAC,CAAC;IACFpB,SAAS,CAACU,iBAAiB,CAAC;IAC5BR,YAAY,CAAC,KAAK,CAAC;EACpB;EAEA,oBACCN,OAAA,CAACJ,KAAK,CAAC6B,QAAQ;IAAAC,QAAA,gBACd1B,OAAA;MAAA0B,QAAA,eACC1B,OAAA;QAAQ2B,OAAO,EAAEpB,kBAAmB;QAAAmB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACV/B,OAAA;MAAA0B,QAAA,GACE,CAACrB,SAAS,IAAIF,MAAM,CAAC6B,MAAM,GAAG,CAAC,iBAAIhC,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACjE,CAAC1B,SAAS,IAAIF,MAAM,CAAC6B,MAAM,KAAK,CAAC,iBAAIhC,OAAA;QAAA0B,QAAA,EAAG;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EACpD1B,SAAS,iBAAIL,OAAA;QAAA0B,QAAA,EAAG;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEnB;AAAC7B,EAAA,CAlDQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}