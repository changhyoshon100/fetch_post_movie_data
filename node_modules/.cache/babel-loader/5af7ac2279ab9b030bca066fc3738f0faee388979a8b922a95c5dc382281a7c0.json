{"ast":null,"code":"var _jsxFileName = \"/Users/changhyoshon/Udemy/React/section15_practice/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  function fetchMoviesHandler() {\n    fetch(\"https://swapi.dev/api/films/\").then(response => {\n      return response.json();\n    }).then(data => {\n      const transformedMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformedMovies);\n    });\n  }\n  const dummyMovies = [{\n    id: 1,\n    title: \"Some Dummy Movie\",\n    openingText: \"This is the opening text of the movie\",\n    releaseDate: \"2021-05-18\"\n  }, {\n    id: 2,\n    title: \"Some Dummy Movie 2\",\n    openingText: \"This is the second opening text of the movie\",\n    releaseDate: \"2021-05-19\"\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"m6SRVq9N0POigGpMlnh/6woD7xI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","fetchMoviesHandler","fetch","then","response","json","data","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","dummyMovies","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/changhyoshon/Udemy/React/section15_practice/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\nfunction App() {\n\tconst [movies, setMovies] = useState([]);\n\tfunction fetchMoviesHandler() {\n\t\tfetch(\"https://swapi.dev/api/films/\")\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tconst transformedMovies = data.results.map((movieData) => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid: movieData.episode_id,\n\t\t\t\t\t\ttitle: movieData.title,\n\t\t\t\t\t\topeningText: movieData.opening_crawl,\n\t\t\t\t\t\treleaseDate: movieData.release_date,\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t\tsetMovies(transformedMovies);\n\t\t\t});\n\t}\n\tconst dummyMovies = [\n\t\t{\n\t\t\tid: 1,\n\t\t\ttitle: \"Some Dummy Movie\",\n\t\t\topeningText: \"This is the opening text of the movie\",\n\t\t\treleaseDate: \"2021-05-18\",\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\ttitle: \"Some Dummy Movie 2\",\n\t\t\topeningText: \"This is the second opening text of the movie\",\n\t\t\treleaseDate: \"2021-05-19\",\n\t\t},\n\t];\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<section>\n\t\t\t\t<button>Fetch Movies</button>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t<MoviesList movies={movies} />\n\t\t\t</section>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,SAASQ,kBAAkBA,CAAA,EAAG;IAC7BC,KAAK,CAAC,8BAA8B,CAAC,CACnCC,IAAI,CAAEC,QAAQ,IAAK;MACnB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACvB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACf,MAAMC,iBAAiB,GAAGD,IAAI,CAACE,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAK;QACzD,OAAO;UACNC,EAAE,EAAED,SAAS,CAACE,UAAU;UACxBC,KAAK,EAAEH,SAAS,CAACG,KAAK;UACtBC,WAAW,EAAEJ,SAAS,CAACK,aAAa;UACpCC,WAAW,EAAEN,SAAS,CAACO;QACxB,CAAC;MACF,CAAC,CAAC;MACFjB,SAAS,CAACO,iBAAiB,CAAC;IAC7B,CAAC,CAAC;EACJ;EACA,MAAMW,WAAW,GAAG,CACnB;IACCP,EAAE,EAAE,CAAC;IACLE,KAAK,EAAE,kBAAkB;IACzBC,WAAW,EAAE,uCAAuC;IACpDE,WAAW,EAAE;EACd,CAAC,EACD;IACCL,EAAE,EAAE,CAAC;IACLE,KAAK,EAAE,oBAAoB;IAC3BC,WAAW,EAAE,8CAA8C;IAC3DE,WAAW,EAAE;EACd,CAAC,CACD;EAED,oBACCpB,OAAA,CAACJ,KAAK,CAAC2B,QAAQ;IAAAC,QAAA,gBACdxB,OAAA;MAAAwB,QAAA,eACCxB,OAAA;QAAAwB,QAAA,EAAQ;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACV5B,OAAA;MAAAwB,QAAA,eACCxB,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEnB;AAAC1B,EAAA,CA5CQD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}