{"ast":null,"code":"var _jsxFileName = \"/Users/changhyoshon/Udemy/React/section15_practice/01-starting-project/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\n// function App() {\n// \tconst [movies, setMovies] = useState([]);\n// \tconst [isLoading, setIsLoading] = useState(false);\n// \tconst [error, setError] = useState(null);\n// \t// function fetchMoviesHandler() {\n// \t// \tfetch(\"https://swapi.dev/api/films/\")\n// \t// \t\t.then((response) => {\n// \t// \t\t\treturn response.json();\n// \t// \t\t})\n// \t// \t\t.then((data) => {\n// \t// \t\t\tconst transformedMovies = data.results.map((movieData) => {\n// \t// \t\t\t\treturn {\n// \t// \t\t\t\t\tid: movieData.episode_id,\n// \t// \t\t\t\t\ttitle: movieData.title,\n// \t// \t\t\t\t\topeningText: movieData.opening_crawl,\n// \t// \t\t\t\t\treleaseDate: movieData.release_date,\n// \t// \t\t\t\t};\n// \t// \t\t\t});\n// \t// \t\t\tsetMovies(transformedMovies);\n// \t// \t\t});\n// \t// }\n\n// \tasync function fetchMoviesHandler() {\n// \t\tsetIsLoading(true);\n// \t\tsetError(null);\n// \t\ttry {\n// \t\t\tconst response = await fetch(\"https://swapi.dev/api/films/\");\n// \t\t\tif (!response.ok) {\n// \t\t\t\tthrow new Error(\"Something went wrong!\");\n// \t\t\t}\n\n// \t\t\tconst data = await response.json();\n\n// \t\t\tconst transformedMovies = data.results.map((movieData) => {\n// \t\t\t\treturn {\n// \t\t\t\t\tid: movieData.episode_id,\n// \t\t\t\t\ttitle: movieData.title,\n// \t\t\t\t\topeningText: movieData.opening_crawl,\n// \t\t\t\t\treleaseDate: movieData.release_date,\n// \t\t\t\t};\n// \t\t\t});\n// \t\t\tsetMovies(transformedMovies);\n// \t\t\tsetIsLoading(false);\n// \t\t} catch (error) {\n// \t\t\tsetError(error.message);\n// \t\t}\n\n// \t\tsetIsLoading(false);\n// \t}\n\n// \tlet content = <p>Found no moives.</p>;\n\n// \tif (movies.length > 0) {\n// \t\tcontent = <MoviesList movies={movies} />;\n// \t}\n\n// \tif (error) {\n// \t\tcontent = <p>{error}</p>;\n// \t}\n\n// \tif (isLoading) {\n// \t\tcontent = <p>Loading...</p>;\n// \t}\n\n// \treturn (\n// \t\t<React.Fragment>\n// \t\t\t<section>\n// \t\t\t\t<button onClick={fetchMoviesHandler}>Fetch Movies</button>\n// \t\t\t</section>\n// \t\t\t<section>{content}</section>\n// \t\t</React.Fragment>\n// \t);\n// }\n\n// export default App;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  async function fetchMoviesHandler() {\n    try {\n      console.log(\"click\");\n      setIsLoading(false);\n      setMovies(\"Loading\");\n      const response = await fetch(\"https://swapi.dev/api/film/\");\n      const data = await response.json();\n      const transformedMovies = data.results.map(movie => {\n        return {\n          key: movie.episode_id,\n          title: movie.title,\n          releaseDate: movie.release_date,\n          openingText: movie.opening_crawl\n        };\n      });\n      setMovies(transformedMovies);\n      setIsLoading(true);\n    } catch (error) {}\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 43\n      }, this), !isLoading && movies == \"Loading\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Is Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 43\n      }, this), isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"zuBJAn2dLkBMoQCfa8VUzB2Qvvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","console","log","response","fetch","data","json","transformedMovies","results","map","movie","key","episode_id","title","releaseDate","release_date","openingText","opening_crawl","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/changhyoshon/Udemy/React/section15_practice/01-starting-project/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n\n// function App() {\n// \tconst [movies, setMovies] = useState([]);\n// \tconst [isLoading, setIsLoading] = useState(false);\n// \tconst [error, setError] = useState(null);\n// \t// function fetchMoviesHandler() {\n// \t// \tfetch(\"https://swapi.dev/api/films/\")\n// \t// \t\t.then((response) => {\n// \t// \t\t\treturn response.json();\n// \t// \t\t})\n// \t// \t\t.then((data) => {\n// \t// \t\t\tconst transformedMovies = data.results.map((movieData) => {\n// \t// \t\t\t\treturn {\n// \t// \t\t\t\t\tid: movieData.episode_id,\n// \t// \t\t\t\t\ttitle: movieData.title,\n// \t// \t\t\t\t\topeningText: movieData.opening_crawl,\n// \t// \t\t\t\t\treleaseDate: movieData.release_date,\n// \t// \t\t\t\t};\n// \t// \t\t\t});\n// \t// \t\t\tsetMovies(transformedMovies);\n// \t// \t\t});\n// \t// }\n\n// \tasync function fetchMoviesHandler() {\n// \t\tsetIsLoading(true);\n// \t\tsetError(null);\n// \t\ttry {\n// \t\t\tconst response = await fetch(\"https://swapi.dev/api/films/\");\n// \t\t\tif (!response.ok) {\n// \t\t\t\tthrow new Error(\"Something went wrong!\");\n// \t\t\t}\n\n// \t\t\tconst data = await response.json();\n\n// \t\t\tconst transformedMovies = data.results.map((movieData) => {\n// \t\t\t\treturn {\n// \t\t\t\t\tid: movieData.episode_id,\n// \t\t\t\t\ttitle: movieData.title,\n// \t\t\t\t\topeningText: movieData.opening_crawl,\n// \t\t\t\t\treleaseDate: movieData.release_date,\n// \t\t\t\t};\n// \t\t\t});\n// \t\t\tsetMovies(transformedMovies);\n// \t\t\tsetIsLoading(false);\n// \t\t} catch (error) {\n// \t\t\tsetError(error.message);\n// \t\t}\n\n// \t\tsetIsLoading(false);\n// \t}\n\n// \tlet content = <p>Found no moives.</p>;\n\n// \tif (movies.length > 0) {\n// \t\tcontent = <MoviesList movies={movies} />;\n// \t}\n\n// \tif (error) {\n// \t\tcontent = <p>{error}</p>;\n// \t}\n\n// \tif (isLoading) {\n// \t\tcontent = <p>Loading...</p>;\n// \t}\n\n// \treturn (\n// \t\t<React.Fragment>\n// \t\t\t<section>\n// \t\t\t\t<button onClick={fetchMoviesHandler}>Fetch Movies</button>\n// \t\t\t</section>\n// \t\t\t<section>{content}</section>\n// \t\t</React.Fragment>\n// \t);\n// }\n\n// export default App;\n\nfunction App() {\n\tconst [movies, setMovies] = useState([]);\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst [error, setError] = useState(null);\n\n\tasync function fetchMoviesHandler() {\n\t\ttry {\n\t\t\tconsole.log(\"click\");\n\t\t\tsetIsLoading(false);\n\t\t\tsetMovies(\"Loading\");\n\t\t\tconst response = await fetch(\"https://swapi.dev/api/film/\");\n\t\t\tconst data = await response.json();\n\n\t\t\tconst transformedMovies = data.results.map((movie) => {\n\t\t\t\treturn {\n\t\t\t\t\tkey: movie.episode_id,\n\t\t\t\t\ttitle: movie.title,\n\t\t\t\t\treleaseDate: movie.release_date,\n\t\t\t\t\topeningText: movie.opening_crawl,\n\t\t\t\t};\n\t\t\t});\n\t\t\tsetMovies(transformedMovies);\n\t\t\tsetIsLoading(true);\n\t\t} catch (error) {}\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<section>\n\t\t\t\t<button onClick={fetchMoviesHandler}>Fetch Movies</button>\n\t\t\t</section>\n\t\t\t<section>\n\t\t\t\t{!isLoading && movies.length === 0 && <p>No found</p>}\n\t\t\t\t{!isLoading && movies == \"Loading\" && <p>Is Loading...</p>}\n\t\t\t\t{isLoading && movies.length > 0 && <MoviesList movies={movies} />}\n\t\t\t</section>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}